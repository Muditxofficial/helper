import os
import fitz  # PyMuPDF
from pathlib import Path

def convert_pdf_to_text(pdf_path):
    text = ""
    try:
        doc = fitz.open(pdf_path)
        for page in doc:
            text += page.get_text() + "\n"
        doc.close()
    except Exception as e:
        print(f"❌ Error reading {pdf_path}: {e}")
    return text.strip()

def convert_pdfs_recursive(source_dir, output_dir):
    for root, _, files in os.walk(source_dir):
        for file in files:
            if file.lower().endswith('.pdf'):
                pdf_path = os.path.join(root, file)
                # Calculate relative path from source_dir to file, replace .pdf with .txt
                relative_path = os.path.relpath(pdf_path, source_dir)
                txt_relative_path = Path(relative_path).with_suffix('.txt')
                txt_path = os.path.join(output_dir, txt_relative_path)
                
                # Make sure output folder exists
                os.makedirs(os.path.dirname(txt_path), exist_ok=True)
                
                # Convert PDF to text
                text = convert_pdf_to_text(pdf_path)
                
                # Save to txt
                with open(txt_path, 'w', encoding='utf-8') as f:
                    f.write(text)
                
                print(f"✅ Converted: {pdf_path} -> {txt_path}")

    print("✅ All PDFs converted.")

# ==== SET YOUR PATHS HERE ====
source_directory = r"C:\Path\To\folder1"
output_directory = r"C:\Path\To\output_txt"

convert_pdfs_recursive(source_directory, output_directory)
